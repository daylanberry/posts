{"ast":null,"code":"var _jsxFileName = \"/Users/daylanberry/Desktop/rentwithme/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\n\nconst Post = ({\n  id\n}) => {\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }\n  }, \"Post page at post \", id);\n};\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  console.log(`http://jsonplaceholder.typicode.com/comments?postId=${query.id}`);\n  const {\n    data\n  } = await axios.get(`http://jsonplaceholder.typicode.com/comments?postId=${query.id}`);\n  return _objectSpread(_objectSpread({}, query), {}, {\n    comments: data\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/daylanberry/Desktop/rentwithme/pages/post.js"],"names":["axios","Post","id","getInitialProps","query","console","log","data","get","comments"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAU;AACrB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBA,EAAvB,CADF;AAGD,CAJD;;AAMAD,IAAI,CAACE,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAa,uDAAsDF,KAAK,CAACF,EAAG,EAA5E;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAW,MAAMP,KAAK,CAACQ,GAAN,CAAW,uDAAsDJ,KAAK,CAACF,EAAG,EAA1E,CAAvB;AAEA,yCAAWE,KAAX;AAAkBK,IAAAA,QAAQ,EAAEF;AAA5B;AACD,CALD;;AAOA,eAAeN,IAAf","sourcesContent":["import axios from 'axios';\nconst Post = ({id}) => {\n  return (\n    <h1>Post page at post {id}</h1>\n  )\n}\n\nPost.getInitialProps = async ({ query }) => {\n  console.log(`http://jsonplaceholder.typicode.com/comments?postId=${query.id}`)\n  const { data } = await axios.get(`http://jsonplaceholder.typicode.com/comments?postId=${query.id}`)\n\n  return {...query, comments: data}\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}