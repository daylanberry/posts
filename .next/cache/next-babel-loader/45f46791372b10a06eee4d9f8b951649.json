{"ast":null,"code":"var _jsxFileName = \"/Users/daylanberry/Desktop/rentwithme/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\n\nconst Post = ({\n  id,\n  comments\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }\n  }, \"Post page at post \", id), comments.map((comment, i) => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, comment.email)));\n};\n\nconst Coment = ({\n  email,\n  body\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}, __jsx(\"h5\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, email), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, body));\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  console.log(`http://jsonplaceholder.typicode.com/comments?postId=${query.id}`);\n  const {\n    data\n  } = await axios.get(`http://jsonplaceholder.typicode.com/comments?postId=${query.id}`);\n  return _objectSpread(_objectSpread({}, query), {}, {\n    comments: data\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/daylanberry/Desktop/rentwithme/pages/post.js"],"names":["axios","Post","id","comments","map","comment","i","email","Coment","body","getInitialProps","query","console","log","data","get"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA;AAAL,CAAD,KAAoB;AAC/B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBD,EAAvB,CADF,EAGIC,QAAQ,CAACC,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,OAAO,CAACE,KAAZ,CADF,CAHJ,CADF;AAUD,CAXD;;AAaA,MAAMC,MAAM,GAAG,CAAC;AAAED,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAD,KACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKF,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIE,IAAJ,CAFF,CADF;;AAOAR,IAAI,CAACS,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAa,uDAAsDF,KAAK,CAACT,EAAG,EAA5E;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAW,MAAMd,KAAK,CAACe,GAAN,CAAW,uDAAsDJ,KAAK,CAACT,EAAG,EAA1E,CAAvB;AAEA,yCAAWS,KAAX;AAAkBR,IAAAA,QAAQ,EAAEW;AAA5B;AACD,CALD;;AAOA,eAAeb,IAAf","sourcesContent":["import axios from 'axios';\nconst Post = ({id, comments}) => {\n  return (\n    <div>\n      <h1>Post page at post {id}</h1>\n      {\n        comments.map((comment, i) => (\n          <p>{comment.email}</p>\n        ))\n      }\n    </div>\n  )\n}\n\nconst Coment = ({ email, body}) => (\n  <div>\n    <h5>{email}</h5>\n    <p>{body}</p>\n  </div>\n)\n\nPost.getInitialProps = async ({ query }) => {\n  console.log(`http://jsonplaceholder.typicode.com/comments?postId=${query.id}`)\n  const { data } = await axios.get(`http://jsonplaceholder.typicode.com/comments?postId=${query.id}`)\n\n  return {...query, comments: data}\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}