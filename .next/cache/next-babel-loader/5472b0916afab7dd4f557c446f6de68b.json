{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/daylanberry/Desktop/rentwithme/pages/post.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\n\nvar Post = function Post(_ref) {\n  var id = _ref.id,\n      comments = _ref.comments;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }\n  }, \"Post page at post \", id), comments.map(function (comment, i) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }\n    }, comment.email);\n  }));\n};\n\n_c = Post;\n\nvar Coment = function Coment(_ref2) {\n  var email = _ref2.email,\n      body = _ref2.body;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, email), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, body));\n};\n\n_c2 = Coment;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref3) {\n    var query, _yield$axios$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref3.query;\n            console.log(\"http://jsonplaceholder.typicode.com/comments?postId=\".concat(query.id));\n            _context.next = 4;\n            return axios.get(\"http://jsonplaceholder.typicode.com/comments?postId=\".concat(query.id));\n\n          case 4:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, query), {}, {\n              comments: data\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Coment\");","map":{"version":3,"sources":["/Users/daylanberry/Desktop/rentwithme/pages/post.js"],"names":["axios","Post","id","comments","map","comment","i","email","Coment","body","getInitialProps","query","console","log","get","data"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAoB;AAAA,MAAlBC,EAAkB,QAAlBA,EAAkB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAC/B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBD,EAAvB,CADF,EAGIC,QAAQ,CAACC,GAAT,CAAa,UAACC,OAAD,EAAUC,CAAV;AAAA,WACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,OAAO,CAACE,KAAZ,CADW;AAAA,GAAb,CAHJ,CADF;AAUD,CAXD;;KAAMN,I;;AAaN,IAAMO,MAAM,GAAG,SAATA,MAAS;AAAA,MAAGD,KAAH,SAAGA,KAAH;AAAA,MAAUE,IAAV,SAAUA,IAAV;AAAA,SACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,IAAJ,CAFF,CADa;AAAA,CAAf;;MAAMD,M;;AAONP,IAAI,CAACS,eAAL;AAAA,uEAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,SAASA,KAAT;AACrBC,YAAAA,OAAO,CAACC,GAAR,+DAAmEF,KAAK,CAACT,EAAzE;AADqB;AAAA,mBAEEF,KAAK,CAACc,GAAN,+DAAiEH,KAAK,CAACT,EAAvE,EAFF;;AAAA;AAAA;AAEba,YAAAA,IAFa,oBAEbA,IAFa;AAAA,6EAIVJ,KAJU;AAIHR,cAAAA,QAAQ,EAAEY;AAJP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAed,IAAf","sourcesContent":["import axios from 'axios';\nconst Post = ({id, comments}) => {\n  return (\n    <div>\n      <h1>Post page at post {id}</h1>\n      {\n        comments.map((comment, i) => (\n          <p>{comment.email}</p>\n        ))\n      }\n    </div>\n  )\n}\n\nconst Coment = ({ email, body}) => (\n  <div>\n    <h5>{email}</h5>\n    <p>{body}</p>\n  </div>\n)\n\nPost.getInitialProps = async ({ query }) => {\n  console.log(`http://jsonplaceholder.typicode.com/comments?postId=${query.id}`)\n  const { data } = await axios.get(`http://jsonplaceholder.typicode.com/comments?postId=${query.id}`)\n\n  return {...query, comments: data}\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}